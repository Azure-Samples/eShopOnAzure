@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authentication.OpenIdConnect;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication
@inject LogOutService LogOutService
@inject NavigationManager Nav

<AuthorizeView>
    <Authorized>
        <h3>@context.User.Identity?.Name</h3>
        <div class="dropdown-menu">
            <span class="dropdown-button"><img src="icons/user.svg" /></span>
            <div class="dropdown-content">
                <a class="dropdown-item" href="user/orders">My orders</a>
                <form class="dropdown-item" method="post" action="user/logout" @formname="logout" @onsubmit="LogOutAsync">
                    <AntiforgeryToken />
                    <button type="submit">Log out</button>
                </form>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="dropdown-menu">
            <span class="dropdown-button"><img src="icons/user.svg" /></span>
            <div class="dropdown-content">
                <a class="dropdown-item" href="@Pages.User.LogIn.Url(Nav)">Login</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    private Task LogOutAsync()
        => LogOutService.LogOutAsync(HttpContext!);
}
